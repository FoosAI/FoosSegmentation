{
    "transforms":
    [
        { "_comment_":"-------- Load random frames ---------" },
        {
            "name":"random_video_loader",
            "endswith":".avi",
            "folder":".\\..\\..\\Data\\Processed\\BallSegmentation\\",
            "output":"frame",
            "exclusions":[],
            "random":true,
            "value_loader":
            {
                "json":
                {
                    "values_to_load":["ball"]
                }
            },
            "repeats":
            [
                {
                    "match_type":"partial_match_filename",
                    "value_match":"ball_tags",
                    "repeat_times":1
                }
            ]
        },
        {
            "name":"require",
            "input":"frame"
        },
        {
            "name":"require",
            "input":"ball"
        },

        { "_comment_":"-------- Run the table segmentation model ---------" },
        {
            "name":"resize_point",
            "input":"ball",
            "source_frame_size":"frame",
            "output":"ball",
            "size":[256,512]
        },
        {
            "name":"resize",
            "input":"frame",
            "output":"frame",
            "size":[256,512],
            "resize_mode":"stretch"  
        },
        {
            "name":"normalize_channels",
            "input":"frame",
            "output":"frame",
            "max":1.0,
            "min":0.0
        },
        {
            "name":"run_model",
            "input":"frame",
            "model_file":"models_67.h5",
            "output":"segmentation"
        },
        {
            "name":"channel_max",
            "input":"segmentation",
            "output":"segmentation",
            "max":1.0,
            "min":0.0
        },

        { "_comment_":"-------- Extract the table ---------" },
        {
            "name":"contours_find",
            "input":"segmentation",
            "output_frame":"frame_with_contours",
            "output_contours":"contours_table",
            "threshold":0.5,
            "channel":0,
            "largest":1,
            "convert_to_convex_hull":false,
            "convert_to_bounding_rectangle":false,
            "convert_to_rotated_bounding_rectangle":false,
            "contour_min_area_pixels":10000
        },
        {
            "name":"contours_to_frames",
            "input_frame":"frame",
            "input_contours":"contours_table",
            "input_point":"ball",
            "output_frames":["frame"],
            "output_num_frames":"frame_table_loaded",
            "output_frame_width":256,
            "output_frame_height":256,
            "output_points":["ball_table"]
        },
        {
            "name":"require",
            "input":"frame"
        },
        {
            "name":"require",
            "input":"ball_table"
        },

        { "_comment_":"-------- Create the segmentation result ---------" },
        {
            "name":"zeros_like",
            "reference":"frame",
            "output":"segmentation"
        },
        {
            "name":"draw_circle",
            "input_frame":"segmentation",
            "input_point":"ball_table",
            "radius":3,
            "thickness":5,
            "color":[1,1,1]
        },

        {   "_comment_": "-------- Write the result as frame pairs --------"},
        {
            "name":"to_int_frame",
            "input":"frame",
            "output":"frame"
        },
        {
            "name":"to_int_frame",
            "input":"segmentation",
            "output":"segmentation"
        },
        {
            "name":"basic_writer",
            "frames_to_output":["frame","segmentation"],
            "values_to_output":[],
            "folder":".",
            "filename_prefix":"balltracking",
            "frames_per_chunk":10000
        }
    ]
}
